{
  "address": "0xcC67c99E49EfE35b9e2ED92c6D6Ae7560aDDE714",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        }
      ],
      "name": "swapEthforTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        }
      ],
      "name": "swapSingleHopExactAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x99088700579afcc6922eeaf05150736bb4aa23ad83277824ca1943afbed066d7",
  "receipt": {
    "to": null,
    "from": "0x90F79bf6EB2c4f870365E785982E1f101E93b906",
    "contractAddress": "0xcC67c99E49EfE35b9e2ED92c6D6Ae7560aDDE714",
    "transactionIndex": 0,
    "gasUsed": "785784",
    "logsBloom": "0x
    "blockHash": "0x22383beb03f5e670972d33cb2a37eaeafd56face245d905f4ef3de1eda80a210",
    "transactionHash": "0x99088700579afcc6922eeaf05150736bb4aa23ad83277824ca1943afbed066d7",
    "logs": [],
    "blockNumber": 18211857,
    "cumulativeGasUsed": "785784",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "457cb24931d7827cd69020e4adf5273b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapEthforTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapSingleHopExactAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Swaps.sol\":\"Swaps\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Swaps.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\ninterface  IUniswapRouter {\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n\\r\\n    function swapExactETHForTokens(\\r\\n        uint amountOutMin, // The minimum amount of output tokens that must be received for the transaction not to revert\\r\\n        address[] calldata path, //An array of token addresses\\r\\n        address to, // Destination address\\r\\n        uint deadline\\r\\n    ) // Unix timestamp after which the transaction will revert\\r\\n    external payable returns (uint[] memory amounts); \\r\\n\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n}\\r\\n\\r\\ninterface IERC20{\\r\\n     function totalSupply() external view returns (uint);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint);\\r\\n\\r\\n    function transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ninterface IWETH is IERC20 {\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function withdraw(uint amount) external;\\r\\n}\\r\\n\\r\\ncontract  Swaps {\\r\\n\\r\\n    address private constant router =  0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\\r\\n\\r\\n    address private constant usdt = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\\r\\n    address private constant usdc = 0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d;\\r\\n\\r\\n\\r\\n    IUniswapRouter private uniswapRouter = IUniswapRouter(router);\\r\\n    IERC20 private USDT = IERC20(usdt);\\r\\n    IERC20 private USDC = IERC20(usdc);\\r\\n\\r\\n    function swapEthforTokens(uint amountOutMin) external returns (uint amountOut) {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = uniswapRouter.WETH();\\r\\n        path[1] = usdt;\\r\\n\\r\\n        uint[] memory amounts = uniswapRouter.swapExactETHForTokens(amountOutMin,path,msg.sender,block.timestamp);\\r\\n\\r\\n        return amounts[1];\\r\\n    }\\r\\n\\r\\n  \\r\\n\\r\\n    function swapSingleHopExactAmountIn(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin\\r\\n    ) external returns (uint amountOut) {\\r\\n        USDT.transferFrom(msg.sender, address(this),amountIn);\\r\\n        USDT.approve(address(router),amountIn);\\r\\n\\r\\n        address[] memory path;\\r\\n        path = new address[](2);\\r\\n\\r\\n        path[0] = usdt;\\r\\n        path[1] = usdc;\\r\\n\\r\\n        uint[] memory amounts = uniswapRouter.swapExactTokensForTokens(amountIn,amountOutMin,path,msg.sender,block.timestamp);\\r\\n\\r\\n        return amounts[1];\\r\\n\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x4a7c8ea54e2be6649fa6d4598f29332d10d554ce0ea3841b4539acb07dbacd08\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052737a250d5630b4cf539739df2c5dacb4c659f2488d6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073dac17f958d2ee523a2206206994597c13d831ec7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738ac76a51cc950d9822d68b83fe1ad97b32cd580d600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561010e57600080fd5b50610bfd8061011e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639f23c5d91461003b578063e47677771461006b575b600080fd5b61005560048036038101906100509190610687565b61009b565b60405161006291906106c3565b60405180910390f35b610085600480360381019061008091906106de565b6102fb565b60405161009291906106c3565b60405180910390f35b600080600267ffffffffffffffff8111156100b9576100b861071e565b5b6040519080825280602002602001820160405280156100e75781602001602082028036833780820191505090505b50905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610155573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017991906107ab565b8160008151811061018d5761018c6107d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073dac17f958d2ee523a2206206994597c13d831ec7816001815181106101f0576101ef6107d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab5858433426040518563ffffffff1660e01b815260040161028c94939291906108d4565b6000604051808303816000875af11580156102ab573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102d49190610a5f565b9050806001815181106102ea576102e96107d8565b5b602002602001015192505050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161035c93929190610aa8565b6020604051808303816000875af115801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610b17565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737a250d5630b4cf539739df2c5dacb4c659f2488d856040518363ffffffff1660e01b8152600401610411929190610b44565b6020604051808303816000875af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610b17565b506060600267ffffffffffffffff8111156104725761047161071e565b5b6040519080825280602002602001820160405280156104a05781602001602082028036833780820191505090505b50905073dac17f958d2ee523a2206206994597c13d831ec7816000815181106104cc576104cb6107d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050738ac76a51cc950d9822d68b83fe1ad97b32cd580d8160018151811061052f5761052e6107d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed173986868533426040518663ffffffff1660e01b81526004016105cd959493929190610b6d565b6000604051808303816000875af11580156105ec573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106159190610a5f565b90508060018151811061062b5761062a6107d8565b5b60200260200101519250505092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61066481610651565b811461066f57600080fd5b50565b6000813590506106818161065b565b92915050565b60006020828403121561069d5761069c610647565b5b60006106ab84828501610672565b91505092915050565b6106bd81610651565b82525050565b60006020820190506106d860008301846106b4565b92915050565b600080604083850312156106f5576106f4610647565b5b600061070385828601610672565b925050602061071485828601610672565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107788261074d565b9050919050565b6107888161076d565b811461079357600080fd5b50565b6000815190506107a58161077f565b92915050565b6000602082840312156107c1576107c0610647565b5b60006107cf84828501610796565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61083c8161076d565b82525050565b600061084e8383610833565b60208301905092915050565b6000602082019050919050565b600061087282610807565b61087c8185610812565b935061088783610823565b8060005b838110156108b857815161089f8882610842565b97506108aa8361085a565b92505060018101905061088b565b5085935050505092915050565b6108ce8161076d565b82525050565b60006080820190506108e960008301876106b4565b81810360208301526108fb8186610867565b905061090a60408301856108c5565b61091760608301846106b4565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b61093f82610925565b810181811067ffffffffffffffff8211171561095e5761095d61071e565b5b80604052505050565b600061097161063d565b905061097d8282610936565b919050565b600067ffffffffffffffff82111561099d5761099c61071e565b5b602082029050602081019050919050565b600080fd5b6000815190506109c28161065b565b92915050565b60006109db6109d684610982565b610967565b905080838252602082019050602084028301858111156109fe576109fd6109ae565b5b835b81811015610a275780610a1388826109b3565b845260208401935050602081019050610a00565b5050509392505050565b600082601f830112610a4657610a45610920565b5b8151610a568482602086016109c8565b91505092915050565b600060208284031215610a7557610a74610647565b5b600082015167ffffffffffffffff811115610a9357610a9261064c565b5b610a9f84828501610a31565b91505092915050565b6000606082019050610abd60008301866108c5565b610aca60208301856108c5565b610ad760408301846106b4565b949350505050565b60008115159050919050565b610af481610adf565b8114610aff57600080fd5b50565b600081519050610b1181610aeb565b92915050565b600060208284031215610b2d57610b2c610647565b5b6000610b3b84828501610b02565b91505092915050565b6000604082019050610b5960008301856108c5565b610b6660208301846106b4565b9392505050565b600060a082019050610b8260008301886106b4565b610b8f60208301876106b4565b8181036040830152610ba18186610867565b9050610bb060608301856108c5565b610bbd60808301846106b4565b969550505050505056fea2646970667358221220fd319fbce9a66e4fb316a79b8ad4d5a2493aec9b8fbdb560e2a855540e3c19e964736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80639f23c5d91461003b578063e47677771461006b575b600080fd5b61005560048036038101906100509190610687565b61009b565b60405161006291906106c3565b60405180910390f35b610085600480360381019061008091906106de565b6102fb565b60405161009291906106c3565b60405180910390f35b600080600267ffffffffffffffff8111156100b9576100b861071e565b5b6040519080825280602002602001820160405280156100e75781602001602082028036833780820191505090505b50905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610155573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017991906107ab565b8160008151811061018d5761018c6107d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073dac17f958d2ee523a2206206994597c13d831ec7816001815181106101f0576101ef6107d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab5858433426040518563ffffffff1660e01b815260040161028c94939291906108d4565b6000604051808303816000875af11580156102ab573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102d49190610a5f565b9050806001815181106102ea576102e96107d8565b5b602002602001015192505050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161035c93929190610aa8565b6020604051808303816000875af115801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610b17565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737a250d5630b4cf539739df2c5dacb4c659f2488d856040518363ffffffff1660e01b8152600401610411929190610b44565b6020604051808303816000875af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610b17565b506060600267ffffffffffffffff8111156104725761047161071e565b5b6040519080825280602002602001820160405280156104a05781602001602082028036833780820191505090505b50905073dac17f958d2ee523a2206206994597c13d831ec7816000815181106104cc576104cb6107d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050738ac76a51cc950d9822d68b83fe1ad97b32cd580d8160018151811061052f5761052e6107d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed173986868533426040518663ffffffff1660e01b81526004016105cd959493929190610b6d565b6000604051808303816000875af11580156105ec573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106159190610a5f565b90508060018151811061062b5761062a6107d8565b5b60200260200101519250505092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61066481610651565b811461066f57600080fd5b50565b6000813590506106818161065b565b92915050565b60006020828403121561069d5761069c610647565b5b60006106ab84828501610672565b91505092915050565b6106bd81610651565b82525050565b60006020820190506106d860008301846106b4565b92915050565b600080604083850312156106f5576106f4610647565b5b600061070385828601610672565b925050602061071485828601610672565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107788261074d565b9050919050565b6107888161076d565b811461079357600080fd5b50565b6000815190506107a58161077f565b92915050565b6000602082840312156107c1576107c0610647565b5b60006107cf84828501610796565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61083c8161076d565b82525050565b600061084e8383610833565b60208301905092915050565b6000602082019050919050565b600061087282610807565b61087c8185610812565b935061088783610823565b8060005b838110156108b857815161089f8882610842565b97506108aa8361085a565b92505060018101905061088b565b5085935050505092915050565b6108ce8161076d565b82525050565b60006080820190506108e960008301876106b4565b81810360208301526108fb8186610867565b905061090a60408301856108c5565b61091760608301846106b4565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b61093f82610925565b810181811067ffffffffffffffff8211171561095e5761095d61071e565b5b80604052505050565b600061097161063d565b905061097d8282610936565b919050565b600067ffffffffffffffff82111561099d5761099c61071e565b5b602082029050602081019050919050565b600080fd5b6000815190506109c28161065b565b92915050565b60006109db6109d684610982565b610967565b905080838252602082019050602084028301858111156109fe576109fd6109ae565b5b835b81811015610a275780610a1388826109b3565b845260208401935050602081019050610a00565b5050509392505050565b600082601f830112610a4657610a45610920565b5b8151610a568482602086016109c8565b91505092915050565b600060208284031215610a7557610a74610647565b5b600082015167ffffffffffffffff811115610a9357610a9261064c565b5b610a9f84828501610a31565b91505092915050565b6000606082019050610abd60008301866108c5565b610aca60208301856108c5565b610ad760408301846106b4565b949350505050565b60008115159050919050565b610af481610adf565b8114610aff57600080fd5b50565b600081519050610b1181610aeb565b92915050565b600060208284031215610b2d57610b2c610647565b5b6000610b3b84828501610b02565b91505092915050565b6000604082019050610b5960008301856108c5565b610b6660208301846106b4565b9392505050565b600060a082019050610b8260008301886106b4565b610b8f60208301876106b4565b8181036040830152610ba18186610867565b9050610bb060608301856108c5565b610bbd60808301846106b4565b969550505050505056fea2646970667358221220fd319fbce9a66e4fb316a79b8ad4d5a2493aec9b8fbdb560e2a855540e3c19e964736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 132,
        "contract": "contracts/Swaps.sol:Swaps",
        "label": "uniswapRouter",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IUniswapRouter)39"
      },
      {
        "astId": 138,
        "contract": "contracts/Swaps.sol:Swaps",
        "label": "USDT",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)106"
      },
      {
        "astId": 144,
        "contract": "contracts/Swaps.sol:Swaps",
        "label": "USDC",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)106"
      }
    ],
    "types": {
      "t_contract(IERC20)106": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapRouter)39": {
        "encoding": "inplace",
        "label": "contract IUniswapRouter",
        "numberOfBytes": "20"
      }
    }
  }
}